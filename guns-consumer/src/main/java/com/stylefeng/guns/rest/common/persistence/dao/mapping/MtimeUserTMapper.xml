<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stylefeng.guns.rest.common.persistence.dao.MtimeUserTMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.stylefeng.guns.rest.common.persistence.model.MtimeUserT">
        <id column="UUID" property="uuid" />
        <result column="user_name" property="userName" />
        <result column="user_pwd" property="userPwd" />
        <result column="nick_name" property="nickName" />
        <result column="user_sex" property="userSex" />
        <result column="birthday" property="birthday" />
        <result column="email" property="email" />
        <result column="user_phone" property="userPhone" />
        <result column="address" property="address" />
        <result column="head_url" property="headUrl" />
        <result column="biography" property="biography" />
        <result column="life_state" property="lifeState" />
        <result column="begin_time" property="beginTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <select id="queryUserByUsername" resultType="java.lang.String">
        select user_name from mtime_user_t
        where user_name = #{username}
    </select>

    <insert id="register">
        insert into mtime_user_t
        (user_name, user_pwd, email, user_phone, address)
        values
        (#{username}, #{password}, #{Email}, #{Phone}, #{Address})
    </insert>

    <update id="updateUserInfo">
        update mtime_user_t
        set
        nick_name = #{nickname},
        email = #{email},
        user_phone = #{phone},
        user_sex = #{sex},
        birthday = #{birthday},
        life_state = #{lifeState},
        biography = #{biography},
        address = #{address}
        where
        UUID = #{uuid}
    </update>

    <resultMap id="ResultMap" type="com.stylefeng.guns.rest.modular.consumer.vo.UserInfoModel">
        <id column="UUID" property="uuid" />
        <result column="user_name" property="username" />

        <result column="nick_name" property="nickname" />
        <result column="user_sex" property="sex" />
        <result column="birthday" property="birthday" />
        <result column="email" property="email" />
        <result column="user_phone" property="phone" />
        <result column="address" property="address" />
        <result column="head_url" property="headAddress" />
        <result column="biography" property="biography" />
        <result column="life_state" property="lifeState" />
        <result column="begin_time" property="beginTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    <select id="queryUserById" resultMap="ResultMap">
        select UUID, user_name, nick_name, user_sex, birthday, email, user_phone, address, head_url, biography, life_state, begin_time, update_time
        from mtime_user_t
        where UUID = #{uuid}
    </select>

    <select id="queryPasswordByUsername" resultType="java.lang.String">
        select user_pwd from mtime_user_t
        where user_name = #{username}
    </select>
    <select id="queryUserByusername" resultMap="ResultMap">
        select UUID, user_name, nick_name, user_sex, birthday, email, user_phone, address, head_url, biography, life_state, begin_time, update_time
        from mtime_user_t
        where user_name = #{username}
    </select>
</mapper>
